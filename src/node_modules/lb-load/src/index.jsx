const loaded = [];
export default (src, opts, cb) => {
    if (typeof opts === 'function') {
        cb = opts;
        opts = {}
    }
    const hasCb = typeof cb === "function";
    if (loaded.indexOf(src) >= 0)return hasCb && setTimeout(() => {
        cb(1)
    }, 0);
    loaded.push(src);

    const isJs = src.endsWith("js") || src.split('?')[0].endsWith("js");
    const isCss = src.endsWith("css") || src.split('?')[0].endsWith("css");

    const head = document.head || document.getElementsByTagName('head')[0];
    const script = document.createElement(isJs ? 'script' : isCss ? 'link' : 'div');
    opts = opts || {};

    if (isJs) {
        script.type = opts.type || 'text/javascript';
        script.charset = opts.charset || 'utf8';
        script.async = 'async' in opts ? !!opts.async : true;
        script.src = src;
    }
    if (isCss) {
        script.href = src;
        script.rel = 'stylesheet';
    }

    if (opts.attrs) {
        setAttributes(script, opts.attrs)
    }

    if (opts.text) {
        script.text = '' + opts.text
    }

    if (hasCb) {
        const onend = 'onload' in script ? stdOnEnd : ieOnEnd;
        onend(script, cb);

        if (!script.onload) {
            stdOnEnd(script, cb);
        }
    }

    head.appendChild(script)
}

function setAttributes(script, attrs) {
    attrs.forEach((k, v) => {
        script.setAttribute(k, v);
    });
    // for (let attr in attrs) {
    //     script.setAttribute(attr, attrs[attr]);
    // }
}

function stdOnEnd(script, cb) {
    script.onload = function () {
        this.onerror = this.onload = null;
        cb(null, script)
    };
    script.onerror = function () {
        // this.onload = null here is necessary
        // because even IE9 works not like others
        this.onerror = this.onload = null;
        cb(new Error('Failed to load ' + this.src), script)
    }
}

function ieOnEnd(script, cb) {
    script.onreadystatechange = function () {
        if (this.readyState != 'complete' && this.readyState != 'loaded') return;
        this.onreadystatechange = null;
        cb(null, script); // there is no way to catch loading errors in IE8
    }
}
